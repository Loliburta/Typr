{"version":3,"sources":["utils/words.ts","hooks/useKeyPress.ts","components/App.tsx","index.tsx"],"names":["words","useKeyPress","callback","useState","keyPressed","setKeyPressed","useEffect","downHandler","key","length","upHandler","window","addEventListener","removeEventListener","App","typingTest","useRef","sort","Math","random","slice","join","outgoingChars","setOutgoingChars","current","charAt","currentChar","setCurrentChar","incomingChars","setIncomingChars","timeToWrite","setTimeToWrite","mistakes","setMistakes","updatedOutgoingChars","updatedIncomingChars","Date","now","substring","round","className","floor","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sJACaA,EAAQ,CACnB,MACA,KACA,KACA,MACA,IACA,KACA,KACA,KACA,MACA,OACA,KACA,MACA,MACA,KACA,MACA,OACA,KACA,MACA,OACA,KACA,KACA,MACA,OACA,OACA,OACA,KACA,MACA,KACA,MACA,OACA,MACA,OACA,OACA,KACA,MACA,MACA,QACA,OACA,MACA,QACA,OACA,KACA,MACA,OACA,MACA,OACA,KACA,OACA,MACA,QACA,KACA,QACA,OACA,KACA,OACA,MACA,QACA,OACA,OACA,OACA,QACA,QACA,OACA,KACA,QACA,MACA,OACA,OACA,QACA,MACA,MACA,MACA,MACA,OACA,OACA,MACA,QACA,KACA,OACA,MACA,SACA,QACA,KACA,OACA,SACA,KACA,OACA,OACA,QACA,OACA,OACA,QACA,MACA,MACA,OACA,OACA,OACA,MACA,OACA,MACA,MACA,OACA,OACA,OACA,MACA,QACA,OACA,OACA,QACA,QACA,OACA,SACA,OACA,QACA,MACA,OACA,OACA,OACA,QACA,OACA,KACA,OACA,MACA,QACA,OACA,OACA,UACA,OACA,OACA,WACA,QACA,QACA,MACA,OACA,MACA,OACA,SACA,OACA,QACA,OACA,OACA,SACA,OACA,QACA,MACA,MACA,MACA,OACA,OACA,OACA,MACA,QACA,OACA,MACA,OACA,OACA,OACA,QACA,MACA,MACA,OACA,OACA,OACA,OACA,QACA,QACA,MACA,OACA,OACA,OACA,OACA,MACA,OACA,OACA,SACA,MACA,MACA,MACA,MACA,SACA,OACA,QACA,OACA,MACA,OACA,QACA,UACA,MACA,KACA,QACA,SACA,QACA,SACA,QACA,OACA,QACA,OACA,QACA,SACA,OACA,QACA,MACA,OACA,SACA,UACA,QACA,SACA,SACA,OACA,QACA,QACA,QACA,QACA,QACA,OACA,MACA,OACA,UACA,QACA,OACA,MACA,QACA,OACA,MACA,UACA,OACA,OACA,QACA,OACA,OACA,QACA,QACA,QACA,MACA,MACA,MACA,OACA,OACA,OACA,MACA,QACA,QACA,QACA,QACA,QACA,OACA,OACA,MACA,QACA,OACA,OACA,WACA,OACA,QACA,WACA,QACA,MACA,OACA,UACA,OACA,QACA,QACA,SACA,QACA,QACA,OACA,OACA,QACA,SACA,QACA,OACA,QACA,MACA,OACA,OACA,SACA,OACA,QACA,OACA,UACA,MACA,OACA,SACA,QACA,OACA,OACA,WACA,OACA,OACA,OACA,OACA,QACA,MACA,OACA,QACA,QACA,OACA,OACA,OACA,SACA,QACA,OACA,QACA,QACA,QACA,QACA,OACA,MACA,OACA,SACA,OACA,OACA,OACA,OACA,OACA,MACA,SACA,SACA,OACA,QACA,OACA,UACA,OACA,UACA,QACA,QACA,UACA,QACA,OACA,WACA,SACA,WACA,OACA,OACA,OACA,OACA,QACA,OACA,QACA,UACA,QACA,OACA,OACA,OACA,QACA,MACA,SCpUaC,EAtBK,SAACC,GACnB,MAAoCC,mBAAwB,MAA5D,mBAAOC,EAAP,KAAmBC,EAAnB,KAmBA,OAlBAC,qBAAU,WACR,IAAMC,EAAc,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,IACjBJ,IAAeI,GAAsB,IAAfA,EAAIC,SAC5BJ,EAAcG,GACdN,GAAYA,EAASM,KAGnBE,EAAY,WAChBL,EAAc,OAKhB,OAHAM,OAAOC,iBAAiB,UAAWL,GACnCI,OAAOC,iBAAiB,QAASF,GAE1B,WACLC,OAAOE,oBAAoB,UAAWN,GACtCI,OAAOE,oBAAoB,QAASH,OAGjCN,G,OCnBIU,EAAM,WACjB,IAAMC,EAAaC,iBACjBhB,EACGiB,MAAK,iBAAM,GAAMC,KAAKC,YACtBC,MAAM,EAAG,IACTC,KAAK,MAGV,EAA0ClB,mBAAS,IAAnD,mBAAOmB,EAAP,KAAsBC,EAAtB,KACA,EAAsCpB,mBAASY,EAAWS,QAAQC,OAAO,IAAzE,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAA0CxB,mBACxCY,EAAWS,QAAQJ,MAAM,IAD3B,mBAAOQ,EAAP,KAAsBC,EAAtB,KAGA,EAAsC1B,mBAAS,GAA/C,mBAAO2B,EAAP,KAAoBC,EAApB,KACA,EAAgC5B,mBAAS,GAAzC,mBAAO6B,EAAP,KAAiBC,EAAjB,KA0BA,OAxBAhC,GAAY,SAACO,GACX,IAAI0B,EAAuBZ,EACvBa,EAAuBP,EAEvBpB,IAAQkB,GACLI,IACHC,EAAeK,KAAKC,OACpBJ,EAAY,IAGdV,EADAW,GAAwBR,GAExBC,EAAeC,EAAcH,OAAO,IACpCU,EAAuBP,EAAcU,UAAU,GAC/CT,EAAiBM,GACY,IAAzBP,EAAcnB,QAChBsB,EACEb,KAAKqB,OAAQH,KAAKC,MAAQP,GAAe,IAAQ,KAAO,MAI5DG,EAAYD,EAAW,MAKzB,sBAAKQ,UAAU,MAAf,UACE,qBAAKA,UAAU,aAAf,kBACA,sBAAKA,UAAU,cAAf,UACE,8BACGtB,KAAKuB,MACH1B,EAAWS,QAAQf,QACjBM,EAAWS,QAAQf,OAASuB,GAC7B,KAJN,OAQA,4BAAIF,IACJ,qBAAKU,UAAU,oBAAf,SACE,oBAAGA,UAAU,YAAb,UACE,sBAAMA,UAAU,gBAAhB,SAAiClB,IACjC,sBAAMkB,UAAU,oBAAhB,SAAqCd,IACrC,+BAAOE,gBCvDnBc,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.def3fcc2.chunk.js","sourcesContent":["// Most popular words in english\nexport const words = [\n  \"the\",\n  \"of\",\n  \"to\",\n  \"and\",\n  \"a\",\n  \"in\",\n  \"is\",\n  \"it\",\n  \"you\",\n  \"that\",\n  \"he\",\n  \"was\",\n  \"for\",\n  \"on\",\n  \"are\",\n  \"with\",\n  \"as\",\n  \"his\",\n  \"they\",\n  \"be\",\n  \"at\",\n  \"one\",\n  \"have\",\n  \"this\",\n  \"from\",\n  \"or\",\n  \"had\",\n  \"by\",\n  \"not\",\n  \"word\",\n  \"but\",\n  \"what\",\n  \"some\",\n  \"we\",\n  \"can\",\n  \"out\",\n  \"other\",\n  \"were\",\n  \"all\",\n  \"there\",\n  \"when\",\n  \"up\",\n  \"use\",\n  \"your\",\n  \"how\",\n  \"said\",\n  \"an\",\n  \"each\",\n  \"she\",\n  \"which\",\n  \"do\",\n  \"their\",\n  \"time\",\n  \"if\",\n  \"will\",\n  \"way\",\n  \"about\",\n  \"many\",\n  \"then\",\n  \"them\",\n  \"write\",\n  \"would\",\n  \"like\",\n  \"so\",\n  \"these\",\n  \"her\",\n  \"long\",\n  \"make\",\n  \"thing\",\n  \"see\",\n  \"him\",\n  \"two\",\n  \"has\",\n  \"look\",\n  \"more\",\n  \"day\",\n  \"could\",\n  \"go\",\n  \"come\",\n  \"did\",\n  \"number\",\n  \"sound\",\n  \"no\",\n  \"most\",\n  \"people\",\n  \"my\",\n  \"over\",\n  \"know\",\n  \"water\",\n  \"than\",\n  \"call\",\n  \"first\",\n  \"who\",\n  \"may\",\n  \"down\",\n  \"side\",\n  \"been\",\n  \"now\",\n  \"find\",\n  \"any\",\n  \"new\",\n  \"work\",\n  \"part\",\n  \"take\",\n  \"get\",\n  \"place\",\n  \"made\",\n  \"live\",\n  \"where\",\n  \"after\",\n  \"back\",\n  \"little\",\n  \"only\",\n  \"round\",\n  \"man\",\n  \"year\",\n  \"came\",\n  \"show\",\n  \"every\",\n  \"good\",\n  \"me\",\n  \"give\",\n  \"our\",\n  \"under\",\n  \"name\",\n  \"very\",\n  \"through\",\n  \"just\",\n  \"form\",\n  \"sentence\",\n  \"great\",\n  \"think\",\n  \"say\",\n  \"help\",\n  \"low\",\n  \"line\",\n  \"differ\",\n  \"turn\",\n  \"cause\",\n  \"much\",\n  \"mean\",\n  \"before\",\n  \"move\",\n  \"right\",\n  \"boy\",\n  \"old\",\n  \"too\",\n  \"same\",\n  \"tell\",\n  \"does\",\n  \"set\",\n  \"three\",\n  \"want\",\n  \"air\",\n  \"well\",\n  \"also\",\n  \"play\",\n  \"small\",\n  \"end\",\n  \"put\",\n  \"home\",\n  \"read\",\n  \"hand\",\n  \"port\",\n  \"large\",\n  \"spell\",\n  \"add\",\n  \"even\",\n  \"land\",\n  \"here\",\n  \"must\",\n  \"big\",\n  \"high\",\n  \"such\",\n  \"follow\",\n  \"act\",\n  \"why\",\n  \"ask\",\n  \"men\",\n  \"change\",\n  \"went\",\n  \"light\",\n  \"kind\",\n  \"off\",\n  \"need\",\n  \"house\",\n  \"picture\",\n  \"try\",\n  \"us\",\n  \"again\",\n  \"animal\",\n  \"point\",\n  \"mother\",\n  \"world\",\n  \"near\",\n  \"build\",\n  \"self\",\n  \"earth\",\n  \"father\",\n  \"head\",\n  \"stand\",\n  \"own\",\n  \"page\",\n  \"should\",\n  \"country\",\n  \"found\",\n  \"answer\",\n  \"school\",\n  \"grow\",\n  \"study\",\n  \"still\",\n  \"learn\",\n  \"plant\",\n  \"cover\",\n  \"food\",\n  \"sun\",\n  \"four\",\n  \"between\",\n  \"state\",\n  \"keep\",\n  \"eye\",\n  \"never\",\n  \"last\",\n  \"let\",\n  \"thought\",\n  \"city\",\n  \"tree\",\n  \"cross\",\n  \"farm\",\n  \"hard\",\n  \"start\",\n  \"might\",\n  \"story\",\n  \"saw\",\n  \"far\",\n  \"sea\",\n  \"draw\",\n  \"left\",\n  \"late\",\n  \"run\",\n  \"don't\",\n  \"while\",\n  \"press\",\n  \"close\",\n  \"night\",\n  \"real\",\n  \"life\",\n  \"few\",\n  \"north\",\n  \"open\",\n  \"seem\",\n  \"together\",\n  \"next\",\n  \"white\",\n  \"children\",\n  \"begin\",\n  \"got\",\n  \"walk\",\n  \"example\",\n  \"ease\",\n  \"paper\",\n  \"group\",\n  \"always\",\n  \"music\",\n  \"those\",\n  \"both\",\n  \"mark\",\n  \"often\",\n  \"letter\",\n  \"until\",\n  \"mile\",\n  \"river\",\n  \"car\",\n  \"feet\",\n  \"care\",\n  \"second\",\n  \"book\",\n  \"carry\",\n  \"took\",\n  \"science\",\n  \"eat\",\n  \"room\",\n  \"friend\",\n  \"began\",\n  \"idea\",\n  \"fish\",\n  \"mountain\",\n  \"stop\",\n  \"once\",\n  \"base\",\n  \"hear\",\n  \"horse\",\n  \"cut\",\n  \"sure\",\n  \"watch\",\n  \"color\",\n  \"face\",\n  \"wood\",\n  \"main\",\n  \"enough\",\n  \"plain\",\n  \"girl\",\n  \"usual\",\n  \"young\",\n  \"ready\",\n  \"above\",\n  \"ever\",\n  \"red\",\n  \"list\",\n  \"though\",\n  \"feel\",\n  \"talk\",\n  \"bird\",\n  \"soon\",\n  \"body\",\n  \"dog\",\n  \"family\",\n  \"direct\",\n  \"pose\",\n  \"leave\",\n  \"song\",\n  \"measure\",\n  \"door\",\n  \"product\",\n  \"black\",\n  \"short\",\n  \"numeral\",\n  \"class\",\n  \"wind\",\n  \"question\",\n  \"happen\",\n  \"complete\",\n  \"ship\",\n  \"area\",\n  \"half\",\n  \"rock\",\n  \"order\",\n  \"fire\",\n  \"south\",\n  \"problem\",\n  \"piece\",\n  \"told\",\n  \"knew\",\n  \"pass\",\n  \"since\",\n  \"top\",\n  \"whole\",\n];\n","import { useState, useEffect } from \"react\";\n\nconst useKeyPress = (callback: any) => {\n  const [keyPressed, setKeyPressed] = useState<string | null>(null);\n  useEffect(() => {\n    const downHandler = ({ key }: { key: string }) => {\n      if (keyPressed !== key && key.length === 1) {\n        setKeyPressed(key);\n        callback && callback(key);\n      }\n    };\n    const upHandler = () => {\n      setKeyPressed(null);\n    };\n    window.addEventListener(\"keydown\", downHandler);\n    window.addEventListener(\"keyup\", upHandler);\n\n    return () => {\n      window.removeEventListener(\"keydown\", downHandler);\n      window.removeEventListener(\"keyup\", upHandler);\n    };\n  });\n  return keyPressed;\n};\nexport default useKeyPress;\n","import { useState, useRef } from \"react\";\nimport { words } from \"../utils/words\";\nimport useKeyPress from \"../hooks/useKeyPress\";\nexport const App = () => {\n  const typingTest = useRef(\n    words\n      .sort(() => 0.5 - Math.random())\n      .slice(0, 26)\n      .join(\" \")\n  );\n\n  const [outgoingChars, setOutgoingChars] = useState(\"\");\n  const [currentChar, setCurrentChar] = useState(typingTest.current.charAt(0));\n  const [incomingChars, setIncomingChars] = useState(\n    typingTest.current.slice(1)\n  );\n  const [timeToWrite, setTimeToWrite] = useState(0);\n  const [mistakes, setMistakes] = useState(0);\n\n  useKeyPress((key: any) => {\n    let updatedOutgoingChars = outgoingChars;\n    let updatedIncomingChars = incomingChars;\n\n    if (key === currentChar) {\n      if (!timeToWrite) {\n        setTimeToWrite(Date.now());\n        setMistakes(0);\n      }\n      updatedOutgoingChars += currentChar;\n      setOutgoingChars(updatedOutgoingChars);\n      setCurrentChar(incomingChars.charAt(0));\n      updatedIncomingChars = incomingChars.substring(1);\n      setIncomingChars(updatedIncomingChars);\n      if (incomingChars.length === 0) {\n        setTimeToWrite(\n          Math.round(((Date.now() - timeToWrite) / 1000) * 100) / 100\n        );\n      }\n    } else {\n      setMistakes(mistakes + 1);\n    }\n  });\n\n  return (\n    <div className=\"app\">\n      <div className=\"app__title\">Typr</div>\n      <div className=\"app__middle\">\n        <p>\n          {Math.floor(\n            (typingTest.current.length /\n              (typingTest.current.length + mistakes)) *\n              100\n          )}\n          %\n        </p>\n        <p>{timeToWrite}</p>\n        <div className=\"app__middle__text\">\n          <p className=\"Character\">\n            <span className=\"Character-out\">{outgoingChars}</span>\n            <span className=\"Character-current\">{currentChar}</span>\n            <span>{incomingChars}</span>\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport {App} from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}